"""Initial migration

Revision ID: 22fca83fb8e0
Revises: 
Create Date: 2025-10-28 01:11:15.875471

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '22fca83fb8e0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('join_code', sa.String(length=10), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('join_code')
    )
    op.create_table('assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chapter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('weak_topics', sa.JSON(), nullable=True),
    sa.Column('strong_topics', sa.JSON(), nullable=True),
    sa.Column('predicted_weak_topics', sa.JSON(), nullable=True),
    sa.Column('history', sa.JSON(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('topic_time', sa.JSON(), nullable=True),
    sa.Column('followup_progress', sa.JSON(), nullable=True),
    sa.Column('learning_gaps', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assignment_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assignment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('improvement_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('chapter_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('max_score', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['chapter_id'], ['chapter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('option_a', sa.String(length=255), nullable=False),
    sa.Column('option_b', sa.String(length=255), nullable=False),
    sa.Column('option_c', sa.String(length=255), nullable=False),
    sa.Column('option_d', sa.String(length=255), nullable=False),
    sa.Column('correct_option', sa.String(length=1), nullable=False),
    sa.Column('marks', sa.Integer(), nullable=True),
    sa.Column('topic', sa.String(length=100), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('topic_name', sa.String(length=150), nullable=False),
    sa.Column('reviewed_on', sa.DateTime(), nullable=True),
    sa.Column('wrong_questions', sa.JSON(), nullable=True),
    sa.Column('followup_assigned', sa.Boolean(), nullable=True),
    sa.Column('followup_results', sa.JSON(), nullable=True),
    sa.Column('remaining_weak_topics', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('attempted_at', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('wrong_answers', sa.Integer(), nullable=True),
    sa.Column('time_taken', sa.Integer(), nullable=True),
    sa.Column('topic_performance', sa.JSON(), nullable=True),
    sa.Column('auto_submitted_due_to_violation', sa.Boolean(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=True),
    sa.Column('review_completed_at', sa.DateTime(), nullable=True),
    sa.Column('followup_score', sa.Float(), nullable=True),
    sa.Column('followup_attempted', sa.Boolean(), nullable=True),
    sa.Column('topic_time', sa.JSON(), nullable=True),
    sa.Column('weak_topics_after_followup', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proctoring_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('face_detected', sa.Boolean(), nullable=True),
    sa.Column('multiple_faces', sa.Boolean(), nullable=True),
    sa.Column('mobile_detected', sa.Boolean(), nullable=True),
    sa.Column('window_switch_detected', sa.Boolean(), nullable=True),
    sa.Column('eye_gaze_away', sa.Boolean(), nullable=True),
    sa.Column('suspicious_activity', sa.String(length=255), nullable=True),
    sa.Column('warning_level', sa.Integer(), nullable=True),
    sa.Column('system_message', sa.String(length=255), nullable=True),
    sa.Column('auto_submitted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['test_attempt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proctoring_summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('total_warnings', sa.Integer(), nullable=True),
    sa.Column('total_faces_detected', sa.Integer(), nullable=True),
    sa.Column('total_mobile_detections', sa.Integer(), nullable=True),
    sa.Column('total_window_shifts', sa.Integer(), nullable=True),
    sa.Column('last_action', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['test_attempt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stress_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('detected_emotion', sa.String(length=50), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['test_attempt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_option', sa.String(length=1), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('time_spent', sa.Integer(), nullable=True),
    sa.Column('marked_for_review', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['test_attempt.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('subject', sa.String(length=100), nullable=True),
    sa.Column('chapter', sa.String(length=100), nullable=True),
    sa.Column('subtopic', sa.String(length=100), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('followup_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('attempt_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('options', sa.JSON(), nullable=False),
    sa.Column('correct_answer', sa.String(length=1), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_attempted', sa.Boolean(), nullable=True),
    sa.Column('student_answer', sa.String(length=1), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('ai_hint', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['attempt_id'], ['test_attempt.id'], name='fk_followup_attempt_id'),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], name='fk_followup_student_id'),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name='fk_followup_topic_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommended_video',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('video_title', sa.String(length=255), nullable=False),
    sa.Column('video_url', sa.String(length=255), nullable=False),
    sa.Column('channel_name', sa.String(length=150), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('video_summary', sa.Text(), nullable=True),
    sa.Column('video_thumbnail', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], name='fk_video_topic_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic_note',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic_trick',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('topic_trick')
    op.drop_table('topic_note')
    op.drop_table('recommended_video')
    op.drop_table('followup_assignment')
    op.drop_table('topic')
    op.drop_table('student_answer')
    op.drop_table('stress_log')
    op.drop_table('proctoring_summary')
    op.drop_table('proctoring_log')
    op.drop_table('test_attempt')
    op.drop_table('student_review')
    op.drop_table('question')
    op.drop_table('test')
    op.drop_table('assignment_submission')
    op.drop_table('student_class')
    op.drop_table('student_analytics')
    op.drop_table('chapter')
    op.drop_table('assignment')
    op.drop_table('class')
    op.drop_table('user')
    # ### end Alembic commands ###
